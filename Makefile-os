####################################################################################################
# First, set the critical environment variables, using the priority
# make arguments ex: make <command> HOST_UID=1000
# .env if the file exists
# default values if not defined
# These variables are saved to the .env file so that running docker compose
# produces the same results as running make commands
# Include existing .env values if they exist
-include $(wildcard .env)

# If the .env variables are not set, use the defaults
# The HOST_UID is used for mapping the host user id to the olympia user inside a running container
HOST_UID ?= $(shell id -u)
# The COMPOSE_FILE is used to specify which configuration `docker compose` should use
# this applies both to make command and raw docker compose commands via the .env file
# IMPORTANT: COMPOSE_FILE is ignored by `docker buildx build` so make build_docker_image
# explicitly specifies the files to use
COMPOSE_FILE ?= docker-compose.yml
# define the username and email for the superuser in the container
SUPERUSER_EMAIL=$(shell git config user.email)
SUPERUSER_USERNAME=$(shell git config user.name)
# define the version and target of the container
DOCKER_VERSION ?= local
DOCKER_TARGET ?= development
####################################################################################################

DOCKER_BUILDER=container
DOCKER_PROGRESS ?= auto
DOCKER_PUSH ?= false
DOCKER_COMMIT ?= $(shell git rev-parse HEAD || echo "commit")
VERSION_BUILD_URL ?= build

.PHONY: help_redirect
help_redirect:
	@$(MAKE) help --no-print-directory

.PHONY: help_submake
help_submake:
	@echo "Host only commands:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' Makefile-os | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'
	@echo "\nAll other commands will be passed through to the docker 'web' container make:"
	@make -f Makefile-docker help_submake

.PHONY: push_locales
push_locales: ## extracts and merges translation strings
	bash ./scripts/push_l10n_extraction.sh $(ARGS)

.PHONY: update_docker
update_docker: ## update all the docker images
	docker compose exec --user olympia worker make update_deps
	docker compose exec --user olympia web make update
	docker compose restart web
	docker compose restart worker

.PHONY: shell
shell: ## connect to a running addons-server docker shell
	docker compose exec --user olympia web bash

.PHONY: rootshell
rootshell: ## connect to a running addons-server docker shell with root user
	docker compose exec --user root web bash

.PHONY: create_env_file
create_env_file:
	@ rm -f .env
	echo "HOST_UID=${HOST_UID}" >> .env
	echo "COMPOSE_FILE=${COMPOSE_FILE}" >> .env
	echo "SUPERUSER_EMAIL=${SUPERUSER_EMAIL}" >> .env
	echo "SUPERUSER_USERNAME=${SUPERUSER_USERNAME}" >> .env
	echo "DOCKER_VERSION=${DOCKER_VERSION}" >> .env
	echo "DOCKER_TARGET=${DOCKER_TARGET}" >> .env

.PHONY: create_docker_builder
create_docker_builder: ## Create a custom builder for buildkit to efficiently build local images
	docker buildx use $(DOCKER_BUILDER) 2>/dev/null || docker buildx create \
		--name $(DOCKER_BUILDER) \
		--driver=docker-container

DOCKER_BUILD_ARGS := \
--file=docker-compose.yml \
--progress=$(DOCKER_PROGRESS) \
--builder=$(DOCKER_BUILDER) \

ifeq ($(DOCKER_PUSH), true)
	DOCKER_BUILD_ARGS += --push
else
	DOCKER_BUILD_ARGS += --load
endif

.PHONY: version
version: ## create version.json file
	./scripts/version.sh $(DOCKER_VERSION) $(DOCKER_COMMIT) $(VERSION_BUILD_URL)

.PHONY: docker_compose_config
docker_compose_config: ## Show the docker compose configuration
	@echo "file: $(COMPOSE_FILE)"
	@echo "version: $(DOCKER_VERSION)"
	@echo "push: $(DOCKER_PUSH)"
	docker compose config web
	docker buildx bake web --print
	echo $(DOCKER_BUILD_ARGS)

.PHONY: build_docker_image
build_docker_image: create_docker_builder version ## Build the docker image
	docker buildx bake web $(DOCKER_BUILD_ARGS)

.PHONY: docker_compose_down
docker_compose_down: ## Stop the docker containers
	docker compose down --rmi local --volumes --remove-orphans

.PHONY: clean_docker
clean_docker: docker_compose_down ## Clean up docker containers, images, caches, volumes and local cache directories. Use with caution. To restart the app run make initialize_docker after this commandUse with caution.
	docker buildx prune -af
	docker system prune -af --volumes
	rm -rf ./deps/**

.PHONY: docker_compose_up
docker_compose_up: ## Start the docker containers
	docker compose up $(DOCKER_SERVICES) -d --wait --remove-orphans --force-recreate --quiet-pull --build $(ARGS)

.PHONY: docker_extract_deps
docker_extract_deps: ## Extract dependencies from the docker image to a local volume mount
	rm -rf ./deps/**
	# Copy the /deps directory from the image to
	# the ./deps directory on the host.
	# This ensures the local volume contains the files
	# from the image and is not replaced by an empty directory
	# Copying from the image is faster than reinstalling the dependencies
	@echo "Extracting dependencies...".env
	docker compose -f docker-compose.deps.yml exec web

.PHONY: up
up: create_env_file version docker_compose_up ## Create and start docker compose

.PHONY: down
down: docker_compose_down ## Stop the docker containers

.PHONY: initialize_docker
initialize_docker: up
	docker compose exec --user olympia web make initialize

%: ## This directs any other recipe (command) to the web container's make.
	docker compose exec --user olympia web make $(MAKECMDGOALS) ARGS=$(ARGS)

# You probably want to put new commands in Makefile-docker, unless they operate
# on multiple containers or are host-os specific.
