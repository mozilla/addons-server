name: 'Docker Build'
description: 'Builds `addons-server` docker image'
inputs:
  password:
    required: false
    description: "Docker registry password"
    default: "invalid"
  push:
    required: false
    description: "Build and push image to registry (cannot be used together with load)"
    default: "false"
  username:
    required: false
    description: "Docker registry username"
    default: "invalid"

outputs:
  digest:
    description: "The Docker image digest"
    value: ${{ steps.digest.outputs.digest }}
  version:
    description: "The Docker version for the image"
    value: ${{ steps.meta.outputs.version }}
  tags:
    description: "The Docker tags for the image"
    value: ${{ steps.meta.outputs.tags }}

runs:
  using: "composite"
  steps:
    # Setup docker to build for multiple architectures
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest
        buildkitd-flags: --debug

    # Login to a registry to push the image
    - name: Login to Container Registry
      # Only login if we are pushing the image
      if: ${{ inputs.push == 'true' }}
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}


    - name: Suffix for local builds
      id: suffix
      shell: bash
      # The suffix is unique to a branch and commit
      run: |
        if [[ "${{ inputs.push }}" == "false" ]]; then
          echo "suffix=${{ github.ref }}-${{ github.sha }}" >> $GITHUB_OUTPUT
        else
          echo "suffix=ci" >> $GITHUB_OUTPUT
        fi

    # Determine the tags for the image
    # We need to support custom explicit tags allowing CI to build unique images
    # that won't be pushed to the registry.
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        # Hard coding our dockerhub image name
        images: mozilla/addons-server
        flavor: |
          suffix=-${{ steps.suffix.outputs.suffix }}
        tags: |
          type=schedule
          type=ref,event=tag
          type=ref,event=branch
          type=ref,event=pr
          # set latest tag for default branch
          # Disabled for now as we do not use this action for
          # The production build
          # type=raw,value=latest,enable={{is_default_branch}}

    - name: Create .env and version.json files
      shell: bash
      env:
        DOCKER_VERSION: ${{ steps.meta.outputs.version }}
        DOCKER_COMMIT: ${{ github.sha }}
        VERSION_BUILD_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      run: make setup

    - name: Set Docker Variables
      id: cache
      shell: bash
      run: |
        echo "tag=mozilla/addons-server:${{ steps.meta.outputs.version }}-cache" >> $GITHUB_OUTPUT

    - name: Build Image
      id: build
      uses: docker/bake-action@v4
      with:
        targets: web
        push: ${{ inputs.push }}
        load: ${{ inputs.push == 'false' }}
        set: |
          *.cache-from=type=registry,ref=${{ steps.cache.outputs.tag }}
          *.cache-to=type=registry,ref=${{ steps.cache.outputs.tag }},mode=max,compression-level=9,force-compression=true,ignore-error=true

    - name: Get image digest
      id: digest
      shell: bash
      env:
        BUILDX_BAKE_METADATA_FILE: metadata.json
      run: |
        echo '${{ steps.build.outputs.metadata }}' > metadata.json
        echo "digest=$(cat metadata.json | jq -r '.web."containerimage.digest"')" >> $GITHUB_OUTPUT
