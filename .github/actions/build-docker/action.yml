name: 'Docker Build'
description: 'Builds `addons-server` docker image'
inputs:
  load:
    required: false
    description: "Build and load image to local docker daemon. (cannot be used together with push)"
    default: "false"
  no_cache:
    required: false
    description: "Build fresh image without cache"
    default: "false"
  password:
    required: false
    description: "Docker registry password"
    default: "invalid"
  pull:
    required: false
    description: "Pull all referenced images before building"
    default: "false"
  push:
    required: false
    description: "Build and push image to registry (cannot be used together with load)"
    default: "false"
  python_version:
    required: false
    description: "Python version"
    default: "3.10"
  username:
    required: false
    description: "Docker registry username"
    default: "invalid"

outputs:
  tags:
    description: "The Docker tags for the image"
    value: ${{ steps.meta.outputs.tags }}

runs:
  using: "composite"
  steps:
    - name: Validate inputs
      shell: bash
      run: |
        if [[ ${{ inputs.load == 'true' }} == ${{ inputs.push == 'true' }} ]]; then
          echo "Cannot use load and push together. Must choose only one of them."
          exit 1
        fi

        if [[ "${{ inputs.push  }}" == "true" && "${{ github.ref }}" == "refs/heads/master" ]]; then
          echo "Cannot push to registry from master branch unless we migrate our master build job to GHA."
          exit 1
        fi
    # Setup docker to build for multiple architectures
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest
        buildkitd-flags: --debug

    # Login to a registry to push the image
    - name: Login to Container Registry
      # Only login if we are pushing the image
      if: ${{ inputs.push == 'true' }}
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Set commit sha
      id: sha
      shell: bash
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    # Determine the tags for the image
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        # Hard coding our dockerhub imnage name
        images: mozilla/addons-server
        tags: |
          type=schedule
          type=ref,event=tag
          type=ref,event=branch,suffix=-${{ steps.sha.outputs.sha_short }}
          type=ref,event=pr,suffix=-${{ steps.sha.outputs.sha_short }}
          # set latest tag for default branch
          # Disabled for now as we do not use this action for
          # The production build
          # type=raw,value=latest,enable={{is_default_branch}}

    - name: Build Image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        pull: ${{ inputs.pull }}
        push: ${{ inputs.push }}
        load: ${{ inputs.load }}
        no-cache: ${{ inputs.no_cache }}
        tags: ${{ steps.meta.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
            PYTHON_VERSION=${{ inputs.python_version }}
