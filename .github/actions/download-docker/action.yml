name: 'Download docker image from artifact'
description: 'Downloads a docker image and outputs image metadata'
inputs:
  artifact_name:
    description: 'The name of the artifact to download the image from'
    required: true

outputs:
  manifest:
    description: The manifest.json file from the downloaded image
    value: ${{ steps.load.outputs.manifest }}
  index:
    description: The index.json file for the downloaded image
    value: ${{ steps.load.outputs.index }}
  tag:
    description: The image tag from the index.json
    value: ${{ steps.load.outputs.tag }}
  version:
    description: The image version from the index.json (extracted from the tag)
    value: ${{ steps.load.outputs.version }}
  digest:
    description: The image digest from the index.json
    value: ${{ steps.load.outputs.digest }}

runs:
  using: 'composite'
  steps:
    # TODO validate docker target prod/dev

    - name: Download dir
      id: download
      shell: bash
      run: |
        echo "path=/tmp/load-docker" >> $GITHUB_OUTPUT

    - uses: actions/download-artifact@v4
      with:
        # We expect the image to be uploaded with the artifact name
        name: ${{ inputs.artifact_name }}
        path: ${{ steps.download.outputs.path }}

    - name: Load image
      id: load
      shell: bash
      env:
        # This value must be kept in sync with `build.yml`
        # That tells us where to load the image from
        build_docker_image_file: image.tar
      run: |
        image_dir="${{ steps.download.outputs.path }}"
        image_file="${{ env.build_docker_image_file }}"
        image_path=""$image_dir/$image_file""

        docker load < "$image_path"

        contents_path="$image_dir/contents"
        mkdir -p "$contents_path"

        # Unpack the tarball
        tar -xf $image_path -C $contents_path

        # Read the manifest.json
        manifest=$(cat "$contents_path/manifest.json")
        echo "manifest=$manifest" >> $GITHUB_OUTPUT

        # Read the index.json
        index=$(cat "$contents_path/index.json")
        echo "index=$index" >> $GITHUB_OUTPUT

        digest=$(echo $index | jq -r '.manifests[0].digest')
        echo "digest=$digest" >> $GITHUB_OUTPUT

        tag=$(echo $manifest | jq -r '.[0].RepoTags[0]')
        echo "tag=$tag" >> $GITHUB_OUTPUT

        version=$(echo $tag | awk -F: '{print $2}')
        echo "version=$version" >> $GITHUB_OUTPUT

        cat $GITHUB_OUTPUT

