name: 'Docker Run Action'
description: 'Run a command in a new container'
inputs:
  version:
    description: 'The version of the image to run. '
    required: true
    default: 'local'
  digest:
    description: 'The build digest of the image to run. Overrides version.'
    required: true
    default: ''
  run:
    description: 'Run command in container'
    required: true
  logs:
    description: 'Show logs'
    required: false
  data_backup_skip:
    description: 'Skip data backup'
    required: false
    default: 'true'
  target:
    description: 'Docker target to run (development|production)'
    required: false
    default: 'production'
  mount:
    description: 'Mount host files at runtime? (development|production)'
    required: false
    default: 'production'
  deps:
    description: 'Which dependencies to install at runtime? (development|production)'
    required: false
    default: 'production'

runs:
  using: 'composite'
  steps:
    - name: Run Docker Container
      shell: bash
      run: |
        # Start the specified services
        make up \
          DOCKER_VERSION="${{ inputs.version }}" \
          DOCKER_DIGEST="${{ inputs.digest }}" \
          DOCKER_TARGET="${{ inputs.target }}" \
          OLYMPIA_UID="$(id -u)" \
          OLYMPIA_MOUNT="${{ inputs.mount }}" \
          OLYMPIA_DEPS="${{ inputs.deps }}" \
          DATA_BACKUP_SKIP="${{ inputs.data_backup_skip }}" \
          DOCKER_WAIT="true"


        # Exec the run command in the container
        # quoted 'EOF' to prevent variable expansion
        cat <<'EOF' | docker compose exec --user olympia web sh
          ${{ inputs.run }}
        EOF

    - name: Logs
      if: ${{ inputs.logs }}
      shell: bash
      run: docker compose logs
