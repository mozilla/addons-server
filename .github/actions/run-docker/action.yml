name: 'Docker Run Action'
description: 'Run a command in a new container'
inputs:
  tag:
    description: 'The tag/version/version+digest of the image to run. '
    required: true
    default: 'local'
  run:
    description: 'Run command in container'
    required: true
  logs:
    description: 'Show logs'
    required: false
  skip_data_seed:
    description: 'Skip data backup'
    required: false
    default: 'true'
  target:
    description: 'Docker target to run (development|production)'
    required: false
    default: 'production'
  deps:
    description: 'Which dependencies to install at runtime? (development|production)'
    required: false
    default: 'production'

runs:
  using: 'composite'
  steps:
    - name: Run Docker Container
      id: run
      continue-on-error: true
      shell: bash
      run: |
        # Start the specified services
        make up \
          DOCKER_TAG="${{ inputs.tag }}" \
          DOCKER_TARGET="${{ inputs.target }}" \
          OLYMPIA_UID="$(id -u)" \
          OLYMPIA_DEPS="${{ inputs.deps }}" \
          SKIP_DATA_SEED="${{ inputs.skip_data_seed }}" \
          DOCKER_WAIT="true"


        # Exec the run command in the container
        # quoted 'EOF' to prevent variable expansion
        cat <<'EOF' | docker compose exec --user olympia web sh
          ${{ inputs.run }}
        EOF

    - name: Post Run (logs and exit code)
      if: always()
      shell: bash
      run: |
        if [[ "${{ inputs.logs }}" == "true" ]]; then
          docker compose logs
        fi

        # If the run command failed, exit with a non-zero exit code
        if [ "${{ steps.run.outcome }}" != 'success' ]; then
          exit 1
        fi
