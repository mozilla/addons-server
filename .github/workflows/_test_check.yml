name: Test make up and check the local dev setup

run-name: |
  ref: ${{ github.ref_name }} |
  tag: ${{ inputs.tag }} |

on:
  workflow_call:
    inputs:
      tag:
        description: The tag/version/version+digest of the image to run
        type: string
        required: true

  workflow_dispatch:
    inputs:
      tag:
        description: The tag/version/version+digest of the image to run
        type: string
        required: true


concurrency:
  group: test_check-${{ github.workflow }}-${{ github.event_name}}-${{ github.ref}}-${{ toJson(inputs) }}
  cancel-in-progress: true

jobs:
  context:
    runs-on: ubuntu-latest
    outputs:
      is_fork: ${{ steps.context.outputs.is_fork }}
    steps:
      - uses: actions/checkout@v4
      - id: context
        uses: ./.github/actions/context

  test_check:
    runs-on: ubuntu-latest
    name: |
      tag: '${{ matrix.tag }}' |
      target: '${{ matrix.target }}' |
      deps: '${{ matrix.deps }}'
    strategy:
      fail-fast: false
      matrix:
        tag:
          - local
          - ${{ inputs.tag }}
        target:
          - development
          - production
        deps:
          - development
          - production
    steps:
      - uses: actions/checkout@v4
      - name: ${{ matrix.tag == 'local' && 'Uncached Build' || 'Pull' }} Check
        id: build
        continue-on-error: true
        uses: ./.github/actions/run-docker
        # Set environment variables that are expected to be ignored
        env:
          DOCKER_COMMIT: 'not-expected'
        with:
          tag: ${{ matrix.tag }}
          target: ${{ matrix.target }}
          deps: ${{ matrix.deps }}
          run: make check

      - name: Verify build
        id: verify
        shell: bash
        run: |
          tag="${{ matrix.tag }}"
          target="${{ matrix.target }}"
          outcome="${{ steps.build.outcome }}"
          if [[ "$tag" != "local" && "$target" == "development" && "$outcome" == "success" ]]; then
            echo "Non local images must run in production mode"
            exit 1
          fi

      - name: Cached Build Check
        uses: ./.github/actions/run-docker
        if: matrix.tag == 'local' && steps.verify.outcome == 'success'
        with:
          tag: ${{ matrix.tag }}
          target: ${{ matrix.target }}
          deps: ${{ matrix.deps }}
          run: echo true

  test_make_docker_configuration:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - name: Install dependencies
        shell: bash
        run: npm ci
      - name: Check make/docker configuration
        shell: bash
        run: |
          docker compose version
          make test_setup
      - name: Test setup
        uses: ./.github/actions/run-docker
        with:
          tag: ${{ inputs.tag }}
          deps: development
          run: |
            pytest tests/make/

  test_verify_failure:
    runs-on: ubuntu-latest
    needs: context

    steps:
      - uses: actions/checkout@v4

      - name: Create failure
        id: failure
        continue-on-error: true
        uses: ./.github/actions/run-docker
        with:
          tag: ${{ inputs.tag }}
          run: |
            exit 1

      - name: Verify failure
        if: always()
        run: |
          if [[ "${{ steps.failure.outcome }}" != "failure" ]]; then
            echo "Expected failure"
            exit 1
          fi

  test_special_characters:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check (special characters in command)
        uses: ./.github/actions/run-docker
        with:
          tag: ${{ inputs.tag }}
          run: |
            echo 'this is a question?'
            echo 'a * is born'
            echo 'wow an array []'

  test_migrations:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/run-docker
        with:
          tag: ${{ inputs.tag }}
          run: echo true
