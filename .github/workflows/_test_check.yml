name: Test make up and check the local dev setup

run-name: |
  ref: ${{ github.ref_name }} |
  version: ${{ inputs.version }} |
  digest: ${{ inputs.digest }} |

on:
  workflow_call:
    inputs:
      version:
        description: The version of the image to run
        type: string
        required: true
      digest:
        description: The build digest of the image to run. Overrides version.
        type: string
        required: false
  workflow_dispatch:
    inputs:
      version:
        description: The version of the image to run
        type: string
        required: true
      digest:
        description: The build digest of the image to run. Overrides version.
        type: string
        required: false

concurrency:
  group: test_check-${{ github.workflow }}-${{ github.event_name}}-${{ github.ref}}-${{ toJson(inputs) }}
  cancel-in-progress: true

jobs:
  context:
    runs-on: ubuntu-latest
    outputs:
      is_fork: ${{ steps.context.outputs.is_fork }}
    steps:
      - uses: actions/checkout@v4
      - id: context
        uses: ./.github/actions/context

  test_check:
    runs-on: ubuntu-latest
    name: |
      version: '${{ matrix.version }}' |
      target: '${{ matrix.target }}' |
      deps: '${{ matrix.deps }}'
    strategy:
      fail-fast: false
      matrix:
        version:
          - local
          - ${{ inputs.version }}
        target:
          - development
          - production
        deps:
          - development
          - production
    steps:
      - uses: actions/checkout@v4
      - shell: bash
        continue-on-error: true
        run: |
          cat <<EOF
            Values passed to the action:
            version: ${{ matrix.version }}
            target: ${{ matrix.target }}
            deps: ${{ matrix.deps }}
          EOF
      - name: ${{ matrix.version == 'local' && 'Uncached Build' || 'Pull' }} Check
        uses: ./.github/actions/run-docker
        # Set environment variables that are expected to be ignored
        env:
          DOCKER_COMMIT: 'not-expected'
          DOCKER_VERSION: 'not-expected'
        with:
          version: ${{ matrix.version }}
          target: ${{ matrix.target }}
          deps: ${{ matrix.deps }}
          run: make check
      - name: Cached Build Check
        uses: ./.github/actions/run-docker
        if: ${{ matrix.version == 'local' }}
        with:
          version: ${{ matrix.version }}
          target: ${{ matrix.target }}
          deps: ${{ matrix.deps }}
          run: echo true

  test_make_docker_configuration:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - name: Install dependencies
        shell: bash
        run: npm ci
      - name: Check make/docker configuration
        shell: bash
        run: |
          docker compose version
          make test_setup
      - name: Test setup
        uses: ./.github/actions/run-docker
        with:
          digest: ${{ inputs.digest }}
          version: ${{ inputs.version }}
          deps: development
          run: |
            pytest tests/make/

  test_verify_failure:
    runs-on: ubuntu-latest
    needs: context

    steps:
      - uses: actions/checkout@v4

      - name: Create failure
        id: failure
        continue-on-error: true
        uses: ./.github/actions/run-docker
        with:
          digest: ${{ inputs.digest }}
          version: ${{ inputs.version }}
          logs: true
          run: |
            exit 1

      - name: Verify failure
        if: always()
        run: |
          if [[ "${{ steps.failure.outcome }}" != "failure" ]]; then
            echo "Expected failure"
            exit 1
          fi

  test_special_characters:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check (special characters in command)
        uses: ./.github/actions/run-docker
        with:
          digest: ${{ inputs.digest }}
          version: ${{ inputs.version }}
          run: |
            echo 'this is a question?'
            echo 'a * is born'
            echo 'wow an array []'

  test_migrations:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/run-docker
        with:
          version: ${{ inputs.version }}
          data_backup_skip: false
          run: echo true
