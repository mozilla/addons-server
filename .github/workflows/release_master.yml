name: Release Master
on:
  # Runs when there is a push to the default branch
  # This triggers tests and a pushed "latest" image
  # That is deployed to the "dev" environment
  push:
    branches:
      - master
  # TODO REMOVE THIS BEFORE MERGING
  pull_request:

jobs:
  context:
    runs-on: ubuntu-latest

    env:
      image: ${{ github.repository }}

    outputs:
      # TODO before merge, change this to check for release master
      should_push: true

      registry: docker.io
      image: ${{ env.image }}
      version: latest

      artifact_name_prod: build-docker-prod
      artifact_name_dev: build-docker-dev

      cache_to: 'type=registry,ref=${{ env.image }}:cache'

    steps:
      - uses: actions/checkout@v4
      - id: context
        uses: ./.github/actions/context

  build:
    runs-on: ubuntu-latest
    needs: context
    strategy:
      matrix:
        include:
          -
            target: production
            artifact_name: ${{ needs.context.outputs.artifact_name_prod }}
            push: ${{ needs.context.outputs.should_push }}
          -
            target: development
            artifact_name: ${{ needs.context.outputs.artifact_name_dev }}
            push: false

    steps:
      - uses: actions/checkout@v4
      - id: build
        uses: ./.github/actions/build-docker
        with:
          registry: ${{ needs.context.outputs.registry }}
          image: ${{ needs.context.outputs.image }}
          version: ${{ needs.context.outputs.version }}
          target: ${{ matrix.target}}
          artifact_name: ${{ matrix.artifact_name }}
          username: ${{ matrix.push && secrets.DOCKER_USER || '' }}
          password: ${{ matrix.push && secrets.DOCKER_PASS || '' }}
          push: ${{ matrix.push }}
          # Latest can be used as a cache source so we should save the cache
          cache_to: ${{ matrix.push && needs.context.outputs.cache_to || '' }}
          # Latest build should be cacheless
          cache_from: ''

  test:
    needs: [build, context]
    uses: ./.github/workflows/_test.yml
    with:
      artifact_name: ${{ needs.context.outputs.artifact_name_dev }}

  test_main:
    needs: [build, context]
    uses: ./.github/workflows/_test_main.yml
    with:
      artifact_name: ${{ needs.context.outputs.artifact_name_dev }}
