[tox]
envlist = es, addons, devhub, editors, main, ui-tests, flake8, docs, assets

[testenv]
basepython = python2.7
install_command = pip install --no-deps {packages}
setenv =
    PYTHONPATH=src
    ADDONS_LINTER_BIN={toxinidir}/node_modules/.bin/addons-linter
    DJANGO_SETTINGS_MODULE=settings_test
whitelist_externals =
    make
    npm
    bash

[testenv:es]
commands =
    make -f Makefile-docker update_deps
    bash {toxinidir}/locale/compile-mo.sh {toxinidir}/locale/
    py.test -m es_tests --ignore=tests/ui/ -v {posargs}

[testenv:addons]
commands =
    make -f Makefile-docker update_deps
    bash {toxinidir}/locale/compile-mo.sh {toxinidir}/locale/
    py.test -n 2 -m 'not es_tests' -v src/olympia/addons/ {posargs}

[testenv:devhub]
commands =
    make -f Makefile-docker update_deps
    bash {toxinidir}/locale/compile-mo.sh {toxinidir}/locale/
    py.test -n 2 -m 'not es_tests' -v src/olympia/devhub/ {posargs}

[testenv:editors]
commands =
    make -f Makefile-docker update_deps
    bash {toxinidir}/locale/compile-mo.sh {toxinidir}/locale/
    py.test -n 2 -m 'not es_tests' -v src/olympia/editors/ {posargs}

[testenv:amo]
commands =
    make -f Makefile-docker update_deps
    bash {toxinidir}/locale/compile-mo.sh {toxinidir}/locale/
    py.test -n 2 -m 'not es_tests' -v src/olympia/amo/ {posargs}

[testenv:users]
commands =
    make -f Makefile-docker update_deps
    bash {toxinidir}/locale/compile-mo.sh {toxinidir}/locale/
    py.test -n 2 -m 'not es_tests' -v src/olympia/users/ {posargs}

[testenv:main]
commands =
    make -f Makefile-docker update_deps
    bash {toxinidir}/locale/compile-mo.sh {toxinidir}/locale/
    py.test -n 2 -m 'not es_tests' -v src/olympia/ --ignore src/olympia/addons/ --ignore src/olympia/devhub/ --ignore src/olympia/editors/ --ignore src/olympia/amo/ --ignore src/olympia/users/ {posargs}

[testenv:ui-tests]
passenv = DISPLAY PYTEST_ADDOPTS PYTEST_BASE_URL ELASTICSEARCH_LOCATION
commands =
    make -f Makefile-docker update_deps
    pip install --exists-action=w -r tests/ui/requirements.txt
    pytest --boxed --driver Firefox -v tests/ui {posargs}

[testenv:assets]
commands =
    make -f Makefile-docker update_deps
    make -f Makefile-docker update_assets

[testenv:flake8]
recreate = True
commands =
    pip install --upgrade pip six setuptools
    pip install -r requirements/flake8.txt
    make flake8

[testenv:docs]
commands =
    pip install --upgrade pip six setuptools
    pip install -r requirements/docs.txt
    make -f Makefile-docker docs SPHINXOPTS='-nW'
