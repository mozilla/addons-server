[tox]
envlist = es, addons, devhub, reviewers, main, ui-tests, flake8, docs, assets

[testenv]
passenv = *
basepython = python2.7
install_command = pip install --no-deps {packages}
setenv =
    PYTHONPATH=src
    ADDONS_LINTER_BIN={toxinidir}/node_modules/.bin/addons-linter
    DJANGO_SETTINGS_MODULE=settings_test
whitelist_externals =
    make
    npm
    bash
    pytest

[testenv:es]
commands =
    make -f Makefile-docker update_deps
    bash {toxinidir}/locale/compile-mo.sh {toxinidir}/locale/
    pytest -m es_tests --ignore=tests/ui/ -v {posargs}

[testenv:addons]
commands =
    make -f Makefile-docker update_deps
    bash {toxinidir}/locale/compile-mo.sh {toxinidir}/locale/
    pytest -n 2 -m 'not es_tests' -v src/olympia/addons/ {posargs}

[testenv:devhub]
commands =
    make -f Makefile-docker update_deps
    bash {toxinidir}/locale/compile-mo.sh {toxinidir}/locale/
    pytest -n 2 -m 'not es_tests' -v src/olympia/devhub/ {posargs}

[testenv:reviewers]
commands =
    make -f Makefile-docker update_deps
    bash {toxinidir}/locale/compile-mo.sh {toxinidir}/locale/
    pytest -n 2 -m 'not es_tests' -v src/olympia/reviewers/ {posargs}

[testenv:amo]
commands =
    make -f Makefile-docker update_deps
    bash {toxinidir}/locale/compile-mo.sh {toxinidir}/locale/
    pytest -n 2 -m 'not es_tests' -v src/olympia/amo/ {posargs}

[testenv:users]
commands =
    make -f Makefile-docker update_deps
    bash {toxinidir}/locale/compile-mo.sh {toxinidir}/locale/
    pytest -n 2 -m 'not es_tests' -v src/olympia/users/ {posargs}

[testenv:main]
commands =
    make -f Makefile-docker update_deps
    bash {toxinidir}/locale/compile-mo.sh {toxinidir}/locale/
    pytest -n 2 -m 'not es_tests' -v src/olympia/ --ignore src/olympia/addons/ --ignore src/olympia/devhub/ --ignore src/olympia/reviewers/ --ignore src/olympia/amo/ --ignore src/olympia/users/ {posargs}

[testenv:ui-tests]
commands =
    make -f Makefile-docker update_deps
    pip install --no-deps -r requirements/uitests.txt
    make -f Makefile-docker ui-tests
    pytest --driver Remote --host selenium-firefox --port 4444 --capability browserName firefox --variables tests/ui/variables.json --self-contained-html tests/ui {posargs}

[testenv:assets]
commands =
    make -f Makefile-docker update_deps
    make -f Makefile-docker update_assets

[testenv:codestyle]
recreate = True
commands =
    pip install -r requirements/system.txt
    pip install -r requirements/flake8.txt
    make flake8

[testenv:docs]
commands =
    pip install -r requirements/system.txt
    pip install -r requirements/docs.txt
    make -f Makefile-docker docs SPHINXOPTS='-nW'
