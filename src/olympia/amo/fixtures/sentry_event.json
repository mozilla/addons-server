{
  "breadcrumbs": {
    "values": [
      {
        "category": "query",
        "message": "connect",
        "timestamp": "2022-03-29T14:30:06.365876Z",
        "type": "default"
      },
      {
        "category": "query",
        "data": {},
        "message": "\n                SELECT VERSION(),\n                       @@sql_mode,\n                       @@default_storage_engine,\n                       @@sql_auto_is_null,\n                       @@lower_case_table_names,\n                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL\n            ",
        "timestamp": "2022-03-29T14:30:06.371047Z",
        "type": "default"
      },
      {
        "category": "query",
        "data": {},
        "message": "SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED",
        "timestamp": "2022-03-29T14:30:06.371430Z",
        "type": "default"
      },
      {
        "category": "query",
        "data": {},
        "message": "SELECT `users`.`id`, `users`.`created`, `users`.`modified`, `users`.`password`, `users`.`last_login`, `users`.`username`, `users`.`display_name`, `users`.`email`, `users`.`averagerating`, `users`.`biography`, `users`.`deleted`, `users`.`display_collections`, `users`.`homepage`, `users`.`location`, `users`.`notes`, `users`.`occupation`, `users`.`picture_type`, `users`.`read_dev_agreement`, `users`.`last_login_ip`, `users`.`email_changed`, `users`.`banned`, `users`.`public`, `users`.`fxa_id`, `users`.`auth...",
        "timestamp": "2022-03-29T14:30:06.371581Z",
        "type": "default"
      },
      {
        "type": "http",
        "category": "httplib",
        "data": {
          "method": "GET",
          "url": "https://reputationservice.example.com/type/email/foo@bar.com",
          "status_code": 404,
          "reason": "Not Found"
        },
        "timestamp": "2022-03-29T14:30:06.424152Z"
      },
      {
        "type": "http",
        "category": "httplib",
        "data": {
          "method": "GET",
          "url": "https://reputationservice.example.com/type/ip/4.8.15.16",
          "status_code": 404,
          "reason": "Not Found"
        },
        "timestamp": "2022-03-29T14:30:06.524152Z"
      },
      {
        "type": "http",
        "category": "httplib",
        "data": {
          "method": "GET",
          "url": "https://reputationservice.example.com/type/unknown/foobar",
          "status_code": 404,
          "reason": "Not Found"
        },
        "timestamp": "2022-03-29T14:30:06.624152Z"
      },
      {
        "type": "log",
        "level": "info",
        "category": "z.users",
        "message": "Normalized email from foo.bar@bar.com to foobar@bar.com",
        "timestamp": "2022-03-29T14:30:06.724152Z",
        "data": {
          "sensitive": true,
          "REMOTE_ADDR": "127.0.0.43",
          "USERNAME": "<anon>"
        }
      },
      {
        "type": "log",
        "level": "info",
        "category": "z.something",
        "message": "Some logging",
        "timestamp": "2022-03-29T14:30:06.824152Z",
        "data": {
          "email": "redactme@bar.com",
          "REMOTE_ADDR": "127.0.0.43",
          "USERNAME": "<anon>"
        }
      }
    ]
  },
  "contexts": {
    "runtime": {
      "build": "3.9.7 (default, Sep 28 2021, 18:58:25) \n[GCC 8.3.0]",
      "name": "CPython",
      "version": "3.9.7"
    },
    "trace": {
      "description": "olympia.amo.middleware.TokenValidMiddleware.__call__",
      "op": "django.middleware",
      "parent_span_id": "89b1ebf41b5f9578",
      "span_id": "8f2d8f661d9c9d42",
      "trace_id": "1c6e640f2c9241f38a8978feed7aedac"
    }
  },
  "environment": "production",
  "event_id": "97363c9c50aa40abb603f667ac846e20",
  "exception": {
    "values": [
      {
        "mechanism": {
          "handled": false,
          "type": "django"
        },
        "module": null,
        "stacktrace": {
          "frames": [
            {
              "abs_path": "/deps/lib/python3.9/site-packages/django/core/handlers/exception.py",
              "context_line": "                response = get_response(request)",
              "filename": "django/core/handlers/exception.py",
              "function": "inner",
              "in_app": true,
              "lineno": 47,
              "module": "django.core.handlers.exception",
              "post_context": [
                "            except Exception as exc:",
                "                response = response_for_exception(request, exc)",
                "            return response",
                "        return inner",
                ""
              ],
              "pre_context": [
                "        return inner",
                "    else:",
                "        @wraps(get_response)",
                "        def inner(request):",
                "            try:"
              ],
              "vars": {
                "exc": "RuntimeError('No active exception to reraise')",
                "get_response": "<bound method BaseHandler._get_response of <django.core.handlers.wsgi.WSGIHandler object at 0x7fe1c4521100>>",
                "request": "<WSGIRequest: GET '/services/client_info'>"
              }
            },
            {
              "abs_path": "/deps/lib/python3.9/site-packages/django/core/handlers/base.py",
              "context_line": "                response = wrapped_callback(request, *callback_args, **callback_kwargs)",
              "filename": "django/core/handlers/base.py",
              "function": "_get_response",
              "in_app": true,
              "lineno": 181,
              "module": "django.core.handlers.base",
              "post_context": [
                "            except Exception as e:",
                "                response = self.process_exception_by_middleware(e, request)",
                "                if response is None:",
                "                    raise",
                ""
              ],
              "pre_context": [
                "            wrapped_callback = self.make_view_atomic(callback)",
                "            # If it is an asynchronous view, run it in a subthread.",
                "            if asyncio.iscoroutinefunction(wrapped_callback):",
                "                wrapped_callback = async_to_sync(wrapped_callback)",
                "            try:"
              ],
              "vars": {
                "callback": "<function client_info at 0x7fe1c412fee0>",
                "callback_args": [],
                "callback_kwargs": {},
                "middleware_method": "<function CsrfViewMiddleware.process_view at 0x7fe1c4464d30>",
                "request": "<WSGIRequest: GET '/services/client_info'>",
                "response": "None",
                "self": "<django.core.handlers.wsgi.WSGIHandler object at 0x7fe1c4521100>",
                "wrapped_callback": "<function client_info at 0x7fe1c2a16790>"
              }
            },
            {
              "abs_path": "/deps/lib/python3.9/site-packages/django/views/decorators/cache.py",
              "context_line": "        response = view_func(request, *args, **kwargs)",
              "filename": "django/views/decorators/cache.py",
              "function": "_wrapped_view_func",
              "in_app": true,
              "lineno": 44,
              "module": "django.views.decorators.cache",
              "post_context": [
                "        add_never_cache_headers(response)",
                "        return response",
                "    return _wrapped_view_func"
              ],
              "pre_context": [
                "    \"\"\"",
                "    Decorator that adds headers to a response so that it will never be cached.",
                "    \"\"\"",
                "    @wraps(view_func)",
                "    def _wrapped_view_func(request, *args, **kwargs):"
              ],
              "vars": {
                "args": [],
                "kwargs": {},
                "request": "<WSGIRequest: GET '/services/client_info'>",
                "view_func": "<function client_info at 0x7fe1c412fe50>"
              }
            },
            {
              "abs_path": "/code/src/olympia/amo/views.py",
              "context_line": "    raise",
              "filename": "olympia/amo/views.py",
              "function": "client_info",
              "in_app": true,
              "lineno": 75,
              "module": "olympia.amo.views",
              "post_context": [
                "    if getattr(settings, 'ENV', None) != 'dev':",
                "        raise PermissionDenied",
                "    keys = (",
                "        'HTTP_USER_AGENT',",
                "        'HTTP_X_COUNTRY_CODE',"
              ],
              "pre_context": [
                "@non_atomic_requests",
                "def client_info(request):",
                "    foo = 42",
                "    email = generate_some_dict()['email']",
                "    some_dict = generate_some_dict()"
              ],
              "vars": {
                "email": "'alice@bar.com'",
                "foo": "42",
                "request": "<WSGIRequest: GET '/services/client_info'>",
                "some_dict": {
                  "email": "'alice@bar.com'",
                  "first_level": "42",
                  "second_level": [
                    "'bob@somewhere.com'",
                    {
                      "email": "'claire@bar.com'",
                      "name": "'claire'"
                    }
                  ]
                }
              }
            }
          ]
        },
        "type": "RuntimeError",
        "value": "No active exception to reraise"
      }
    ]
  },
  "extra": {
    "sys.argv": [
      "uwsgi"
    ]
  },
  "level": "error",
  "modules": {
    "alabaster": "0.7.12",
    "amqp": "5.0.9",
    "appdirs": "1.4.4",
    "asgiref": "3.4.1",
    "asn1crypto": "1.4.0",
    "attrs": "21.4.0",
    "babel": "2.9.1",
    "backcall": "0.2.0",
    "basket-client": "1.0.0",
    "billiard": "3.6.4.0",
    "bitarray": "2.3.5",
    "black": "21.12b0",
    "bleach": "4.1.0",
    "boto3": "1.20.33",
    "botocore": "1.23.33",
    "cached-property": "1.5.2",
    "cachetools": "4.2.4",
    "celery": "5.1.2",
    "certifi": "2021.10.8",
    "cffi": "1.15.0",
    "chardet": "4.0.0",
    "click": "7.1.2",
    "click-didyoumean": "0.3.0",
    "click-plugins": "1.1.1",
    "click-repl": "0.2.0",
    "colorgram.py": "1.2.0",
    "cookies": "2.2.1",
    "cryptography": "36.0.1",
    "cssselect": "1.1.0",
    "curlylint": "0.13.0",
    "decorator": "5.1.1",
    "dennis": "0.9",
    "deprecated": "1.2.13",
    "django": "3.2.11",
    "django-admin-rangefilter": "0.8.3",
    "django-aesfield": "3.0.1",
    "django-cors-headers": "3.11.0",
    "django-csp": "3.7",
    "django-debug-toolbar": "3.2.4",
    "django-environ": "0.8.1",
    "django-extended-choices": "1.3.3",
    "django-extensions": "3.1.5",
    "django-jinja": "2.10.0",
    "django-multidb-router": "0.10",
    "django-post-request-task": "0.5",
    "django-statsd-mozilla": "0.4.0",
    "django-tables2": "2.4.1",
    "django-waffle": "2.3.0",
    "djangorestframework": "3.13.1",
    "dockerflow": "2021.7.0",
    "docutils": "0.17.1",
    "drf-nested-routers": "0.93.4",
    "easy-thumbnails": "2.8",
    "elasticsearch": "6.8.2",
    "elasticsearch-dsl": "6.4.0",
    "email-reply-parser": "0.5.12",
    "enmerkar": "0.7.1",
    "execnet": "1.9.0",
    "feedparser": "6.0.8",
    "filtercascade": "0.4.1",
    "flake8": "4.0.1",
    "flake8-mutable": "1.2.0",
    "flake8-quotes": "3.3.1",
    "freezegun": "1.1.0",
    "geoip2": "4.5.0",
    "google-api-core": "2.4.0",
    "google-auth": "2.3.3",
    "google-cloud-bigquery": "2.31.0",
    "google-cloud-core": "2.2.1",
    "google-resumable-media": "2.1.0",
    "googleapis-common-protos": "1.54.0",
    "hawkauthlib": "2.0.0",
    "html5lib": "1.1",
    "idna": "2.10",
    "imagesize": "1.3.0",
    "importlib-metadata": "4.10.0",
    "iniconfig": "1.1.1",
    "ipdb": "0.13.9",
    "ipython": "7.31.0",
    "isodate": "0.6.1",
    "jedi": "0.18.1",
    "jinja2": "3.0.3",
    "jmespath": "0.10.0",
    "kombu": "5.1.0",
    "lxml": "4.7.1",
    "m2secret-py3": "1.3",
    "markupsafe": "2.0.1",
    "maxminddb": "2.2.0",
    "mccabe": "0.6.1",
    "mmh3": "3.0.0",
    "mohawk": "1.1.0",
    "mypy-extensions": "0.4.3",
    "mysqlclient": "2.1.0",
    "nobot": "0.7",
    "olympia": "0.1.0",
    "packaging": "21.3",
    "parso": "0.8.3",
    "parsy": "1.4.0",
    "pathspec": "0.9.0",
    "pexpect": "4.8.0",
    "pickleshare": "0.7.5",
    "pillow": "8.4.0",
    "pip": "21.3.1",
    "platformdirs": "2.4.1",
    "pluggy": "1.0.0",
    "polib": "1.1.1",
    "prompt-toolkit": "3.0.24",
    "proto-plus": "1.19.8",
    "protobuf": "3.19.3",
    "psutil": "5.9.0",
    "ptyprocess": "0.7.0",
    "publicsuffix2": "2.20191221",
    "puente": "0.5.0",
    "py": "1.11.0",
    "pybrowserid": "0.14.0",
    "pycodestyle": "2.8.0",
    "pycparser": "2.21",
    "pyflakes": "2.4.0",
    "pyfxa": "0.7.7",
    "pygit2": "1.4.0",
    "pygments": "2.11.2",
    "pyinotify": "0.9.6",
    "pyjwt": "2.3.0",
    "pymemcache": "3.5.0",
    "pyparsing": "3.0.6",
    "pyquery": "1.4.3",
    "pytest": "6.2.5",
    "pytest-django": "4.5.2",
    "pytest-forked": "1.4.0",
    "pytest-xdist": "2.5.0",
    "python-dateutil": "2.8.2",
    "pytz": "2021.3",
    "pyyaml": "6.0",
    "redis": "4.0.2",
    "regex": "2021.11.10",
    "requests": "2.27.1",
    "requests-hawk": "1.1.1",
    "responses": "0.17.0",
    "s3transfer": "0.5.0",
    "sentry-sdk": "1.5.2",
    "setuptools": "60.5.0",
    "sgmllib3k": "1.0.0",
    "six": "1.16.0",
    "snowballstemmer": "2.2.0",
    "sphinx": "4.3.2",
    "sphinx-rtd-theme": "1.0.0",
    "sphinxcontrib-applehelp": "1.0.2",
    "sphinxcontrib-devhelp": "1.0.2",
    "sphinxcontrib-htmlhelp": "2.0.0",
    "sphinxcontrib-httpdomain": "1.8.0",
    "sphinxcontrib-jsmath": "1.0.1",
    "sphinxcontrib-qthelp": "1.0.3",
    "sphinxcontrib-serializinghtml": "1.1.5",
    "sqlalchemy": "1.4.29",
    "sqlparse": "0.4.2",
    "statsd": "3.3.0",
    "supervisor": "4.2.4",
    "toml": "0.10.2",
    "tomli": "2.0.0",
    "traitlets": "5.1.1",
    "typed-ast": "1.5.1",
    "typing-extensions": "4.0.1",
    "urllib3": "1.26.8",
    "uwsgi": "2.0.20",
    "vine": "5.0.0",
    "watchdog": "2.1.6",
    "wcwidth": "0.2.5",
    "webencodings": "0.5.1",
    "webob": "1.8.7",
    "wheel": "0.37.0",
    "wrapt": "1.13.3",
    "yara-python": "4.1.3",
    "zipp": "3.7.0"
  },
  "platform": "python",
  "release": "7191fe608c344c4f7a3fd6ccfca411f7584daadc",
  "request": {
    "cookies": {
      "frontend_auth_token": "donthackmeplz",
      "sessionid": "leavethisalone"
    },
    "env": {
      "REMOTE_ADDR": "172.18.0.1",
      "SERVER_NAME": "",
      "SERVER_PORT": "80"
    },
    "headers": {
      "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8",
      "Accept-Encoding": "gzip, deflate",
      "Accept-Language": "en-US,en;q=0.5",
      "Connection": "keep-alive",
      "Content-Length": "",
      "Content-Type": "",
      "Cookie": "sessionid=leavethisalone; frontend_auth_token=donthackmeplz",
      "Dnt": "1",
      "Host": "olympia.test",
      "Upgrade-Insecure-Requests": "1",
      "User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0",
      "X-forwarded-for": "127.0.0.42"
    },
    "method": "GET",
    "query_string": "",
    "url": "http://olympia.test/services/client_info"
  },
  "sdk": {
    "integrations": [
      "argv",
      "atexit",
      "boto3",
      "celery",
      "dedupe",
      "django",
      "excepthook",
      "logging",
      "modules",
      "sqlalchemy",
      "stdlib",
      "threading"
    ],
    "name": "sentry.python",
    "packages": [
      {
        "name": "pypi:sentry-sdk",
        "version": "1.5.2"
      }
    ],
    "version": "1.5.2"
  },
  "server_name": "ffa920f6ddc0",
  "timestamp": "2022-03-29T14:30:06.372551Z",
  "transaction": "/services/client_info",
  "user": {
    "email": "mozilla@bar.com",
    "id": "424242",
    "ip_address": "172.18.0.1",
    "username": "anonymous-cad89958965dfc216dbb2f1f0b7aca5f"
  }
}
