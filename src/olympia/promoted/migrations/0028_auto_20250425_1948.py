# Generated by Django 4.2.20 on 2025-04-25 19:48

from django.db import migrations

from olympia.addons.tasks import index_addons
from olympia.constants.promoted import PROMOTED_GROUP_CHOICES

PROMOTED_GROUPS_TO_UPDATE = [PROMOTED_GROUP_CHOICES.STRATEGIC, 
                             PROMOTED_GROUP_CHOICES.NOTABLE]

def update_public_promoted_groups(apps, schema_editor):
    PromotedGroup = apps.get_model('promoted', 'PromotedGroup')
    for group_id in PROMOTED_GROUPS_TO_UPDATE:
        group = PromotedGroup.objects.get(group_id=group_id)
        group.is_public = False
        group.save()

def reverse_public_promoted_group(apps, schema_editor):
    PromotedGroup = apps.get_model('promoted', 'PromotedGroup')
    for group_id in PROMOTED_GROUPS_TO_UPDATE:
        group = PromotedGroup.objects.get(group_id=group_id)
        group.is_public = True
        group.save()

def update_elasticsearch(apps, schema_editor):
    PromotedAddonPromotion = apps.get_model('promoted', 'PromotedAddonPromotion')
    addons_ids = list(PromotedAddonPromotion.objects.filter(
        promoted_group__group_id__in=PROMOTED_GROUPS_TO_UPDATE
    ).values_list('addon_id', flat=True).distinct())
    if addons_ids:
        index_addons.delay(addons_ids)

class Migration(migrations.Migration):

    dependencies = [
        ('promoted', '0027_alter_promotedaddonpromotion_options_and_more'),
    ]

    operations = [
        migrations.RunPython(update_public_promoted_groups, reverse_public_promoted_group),
        migrations.RunPython(update_elasticsearch)
    ]
