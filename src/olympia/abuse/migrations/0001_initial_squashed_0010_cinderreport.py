# Generated by Django 4.2.21 on 2025-05-15 18:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import olympia.amo.migrations
import olympia.amo.models


def set_missing_guid(apps, schema_editor):
    AbuseReport = apps.get_model('abuse', 'AbuseReport')
    for report in AbuseReport.unfiltered.filter(guid__isnull=True, user_id__isnull=True):
        if (addon := getattr(report, 'addon', None)) and addon.guid:
            # Try to associate the report with a guid, if we have one.
            report.guid = addon.guid
            report.save()
        else:
            # Otherwise there isn't anything we can do, so delete the report.
            report.delete()


class Migration(migrations.Migration):

    replaces = [('abuse', '0001_initial'), ('abuse', '0002_add_amo_entrypoint'), ('abuse', '0003_abusereport_addon_install_source_url'), ('abuse', '0004_auto_20210506_1232'), ('abuse', '0005_auto_20210729_1339'), ('abuse', '0006_auto_20210813_0941'), ('abuse', '0007_auto_20220803_0948'), ('abuse', '0008_alter_abusereport_report_entry_point'), ('abuse', '0009_abusereport_reporter_email_name_reasons'), ('abuse', '0010_cinderreport')]

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('addons', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbuseReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('country_code', models.CharField(default=None, max_length=2, null=True)),
                ('guid', models.CharField(max_length=255, null=True)),
                ('message', models.TextField(blank=True)),
                ('state', models.PositiveSmallIntegerField(choices=[(1, 'Untriaged'), (2, 'Valid'), (3, 'Suspicious'), (4, 'Deleted')], default=1)),
                ('client_id', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('addon_name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('addon_summary', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('addon_version', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('addon_signature', models.PositiveSmallIntegerField(blank=True, choices=[(None, 'None'), (1, 'Curated and partner'), (2, 'Curated'), (3, 'Partner'), (4, 'Non-curated'), (5, 'Unsigned'), (6, 'Broken'), (7, 'Unknown'), (8, 'Missing'), (9, 'Preliminary'), (10, 'Signed'), (11, 'System'), (12, 'Privileged')], default=None, null=True)),
                ('application', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Firefox'), (61, 'Firefox for Android')], default=1, null=True)),
                ('application_version', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('application_locale', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('operating_system', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('operating_system_version', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('install_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('reason', models.PositiveSmallIntegerField(blank=True, choices=[(None, 'None'), (1, 'Damages computer and/or data'), (2, 'Creates spam or advertising'), (3, 'Changes search / homepage / new tab page without informing user'), (5, 'Doesn’t work, breaks websites, or slows Firefox down'), (6, 'Hateful, violent, or illegal content'), (7, 'Pretends to be something it’s not'), (9, "Wasn't wanted / impossible to get rid of"), (127, 'Other')], default=None, null=True)),
                ('addon_install_origin', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('addon_install_method', models.PositiveSmallIntegerField(blank=True, choices=[(None, 'None'), (1, 'Add-on Manager Web API'), (2, 'Direct link'), (3, 'Install Trigger'), (4, 'From File'), (5, 'Webext management API'), (6, 'Drag & Drop'), (7, 'Sideload'), (8, 'File URL'), (9, 'Enterprise Policy'), (10, 'Included in build'), (11, 'System Add-on'), (12, 'Temporary Add-on'), (13, 'Sync'), (14, 'URL'), (127, 'Other')], default=None, null=True)),
                ('addon_install_source', models.PositiveSmallIntegerField(blank=True, choices=[(None, 'None'), (1, 'Add-ons Manager'), (2, 'Add-ons Debugging'), (3, 'Preferences'), (4, 'AMO'), (5, 'App Profile'), (6, 'Disco Pane'), (7, 'Included in build'), (8, 'Extension'), (9, 'Enterprise Policy'), (10, 'File URL'), (11, 'GMP Plugin'), (12, 'Internal'), (13, 'Plugin'), (14, 'Return to AMO'), (15, 'Sync'), (16, 'System Add-on'), (17, 'Temporary Add-on'), (18, 'Unknown'), (19, 'Windows Registry (User)'), (20, 'Windows Registry (Global)'), (21, 'System Add-on (Profile)'), (22, 'System Add-on (Update)'), (23, 'System Add-on (Bundled)'), (24, 'Built-in Add-on'), (25, 'System-wide Add-on (User)'), (26, 'Application Add-on'), (27, 'System-wide Add-on (OS Share)'), (28, 'System-wide Add-on (OS Local)'), (127, 'Other')], default=None, null=True)),
                ('report_entry_point', models.PositiveSmallIntegerField(blank=True, choices=[(None, 'None'), (1, 'Uninstall'), (2, 'Menu'), (3, 'Toolbar context menu'), (4, 'AMO')], default=None, null=True)),
                ('addon', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='abuse_reports', to='addons.addon')),
                ('reporter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='abuse_reported', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='abuse_reports', to=settings.AUTH_USER_MODEL)),
                ('addon_install_source_url', models.CharField(blank=True, default=None, max_length=255, null=True)),
            ],
            options={
                'db_table': 'abuse_reports',
                'base_manager_name': 'unfiltered',
                'indexes': [models.Index(fields=['created'], name='created_idx'), models.Index(fields=['guid'], name='guid_idx')],
            },
            bases=(olympia.amo.models.SaveUpdateMixin, models.Model),
            managers=[
                ('unfiltered', django.db.models.manager.Manager()),
            ],
        ),
        migrations.RunPython(
            code=set_missing_guid,
        ),
        migrations.RemoveField(
            model_name='abusereport',
            name='addon',
        ),
        migrations.AddConstraint(
            model_name='abusereport',
            constraint=models.CheckConstraint(check=models.Q(models.Q(models.Q(('guid', ''), _negated=True), ('guid__isnull', False), ('user__isnull', True)), models.Q(('guid__isnull', True), ('user__isnull', False)), _connector='OR'), name='just_one_of_guid_and_user_must_be_set'),
        ),
        migrations.AlterField(
            model_name='abusereport',
            name='report_entry_point',
            field=models.PositiveSmallIntegerField(blank=True, choices=[(None, 'None'), (1, 'Uninstall'), (2, 'Menu'), (3, 'Toolbar context menu'), (4, 'AMO'), (5, 'Unified extensions context menu')], default=None, null=True),
        ),
        migrations.AddField(
            model_name='abusereport',
            name='reporter_email',
            field=models.CharField(default=None, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='abusereport',
            name='reporter_name',
            field=models.CharField(default=None, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='abusereport',
            name='reason',
            field=models.PositiveSmallIntegerField(blank=True, choices=[(None, 'None'), (1, 'Damages computer and/or data'), (2, 'Creates spam or advertising'), (3, 'Changes search / homepage / new tab page without informing user'), (5, 'Doesn’t work, breaks websites, or slows Firefox down'), (6, 'Hateful, violent, or illegal content'), (7, 'Pretends to be something it’s not'), (9, "Wasn't wanted / impossible to get rid of"), (11, 'DSA: Contains hate speech'), (12, 'DSA: Contains child sexual abuse material'), (20, 'Feedback: Doesn’t work, breaks websites, or slows Firefox down'), (21, "Feedback: Wasn't wanted or can't be uninstalled"), (127, 'Other')], default=None, null=True),
        ),
        migrations.CreateModel(
            name='CinderReport',
            fields=[
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('job_id', models.CharField(max_length=36)),
                ('abuse_report', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='abuse.abusereport')),
                ('decision_action', models.PositiveSmallIntegerField(choices=[(0, 'No decision'), (1, 'User ban'), (2, 'Add-on disable'), (3, 'Escalate add-on to reviewers'), (4, 'Escalate add-on to reviewers'), (5, 'Rating delete'), (6, 'Collection delete'), (7, 'Approved (no action)')], default=0)),
                ('decision_id', models.CharField(default=None, max_length=36, null=True)),
            ],
            options={
                'get_latest_by': 'created',
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=(olympia.amo.models.SaveUpdateMixin, models.Model),
        ),
    ]
