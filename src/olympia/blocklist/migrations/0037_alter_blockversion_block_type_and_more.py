# Generated by Django 4.2.16 on 2024-10-31 13:26

from django.db import models, migrations
import olympia.amo.fields


def convert_soft_to_block_type(apps, schema_editor):
    BlockVersion = apps.get_model('blocklist', 'BlockVersion')
    # soft=True -> block_type=1
    # soft=False -> block_type=0
    BlockVersion.objects.filter(soft=True).update(block_type=1)
    BlockVersion.objects.filter(soft=False).update(block_type=0)


def convert_block_type_to_soft(apps, schema_editor):
    BlockVersion = apps.get_model('blocklist', 'BlockVersion')
    # block_type=1 -> soft=True
    # block_type=0 -> soft=False
    BlockVersion.objects.filter(block_type=1).update(soft=True)
    BlockVersion.objects.filter(block_type=0).update(soft=False)


class Migration(migrations.Migration):

    dependencies = [
        ('blocklist', '0036_blocklistsubmission_block_type_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='blockversion',
            name='block_type',
            field=olympia.amo.fields.PositiveTinyIntegerField(choices=[(0, 'Blocked'), (1, 'Restricted')], default=0, null=True),
        ),
        migrations.AlterField(
            model_name='blockversion',
            name='soft',
            field=models.BooleanField(default=False, null=True),
        ),
        migrations.AlterField(
            model_name='blocklistsubmission',
            name='block_type',
            field=olympia.amo.fields.PositiveTinyIntegerField(choices=[(0, 'Blocked'), (1, 'Restricted')], default=0),
        ),
        migrations.RunPython(convert_soft_to_block_type, convert_block_type_to_soft),
    ]
